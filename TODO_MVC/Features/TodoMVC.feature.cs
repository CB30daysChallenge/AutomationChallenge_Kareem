// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.2.0.0
//      SpecFlow Generator Version:2.2.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TODO_MVC.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.2.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("ToDoMvcFeature", SourceFile="Features\\TodoMVC.feature", SourceLine=1)]
    public partial class ToDoMvcFeatureFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "TodoMVC.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ToDoMvcFeature", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify landing page elements", new string[] {
                "ToDo_LandingpageItems"}, SourceLine=4)]
        public virtual void VerifyLandingPageElements()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify landing page elements", new string[] {
                        "ToDo_LandingpageItems"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
testRunner.Given("I am navigated to the TODO MVC Landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
testRunner.When("I examine the Landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
testRunner.Then("I see a title as \"todos\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 9
testRunner.And("I see a text box with text as \"What needs to be done?\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
testRunner.And("I see footer text as \"Double-click to edit a todo\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Footer links"});
            table1.AddRow(new string[] {
                        "Christoph Burgdorf"});
            table1.AddRow(new string[] {
                        "Eric Bidelman"});
            table1.AddRow(new string[] {
                        "Jacob Mumm"});
            table1.AddRow(new string[] {
                        "Igor Minar"});
            table1.AddRow(new string[] {
                        "TodoMVC"});
#line 11
testRunner.And("I see a footer links as", ((string)(null)), table1, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify adding a new todo", new string[] {
                "Todo_Add"}, SourceLine=20)]
        public virtual void VerifyAddingANewTodo()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify adding a new todo", new string[] {
                        "Todo_Add"});
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
testRunner.Given("I am on the TODO MVC Landing page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Todo Item"});
            table2.AddRow(new string[] {
                        "TODO1"});
            table2.AddRow(new string[] {
                        "TODO2"});
            table2.AddRow(new string[] {
                        "TODO3"});
            table2.AddRow(new string[] {
                        "TODO4"});
#line 23
testRunner.When("I add following items", ((string)(null)), table2, "When ");
#line 29
testRunner.Then("I see items are added to the List", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify count of added items along with list options", new string[] {
                "Todo_Count_Listoptions"}, SourceLine=32)]
        public virtual void VerifyCountOfAddedItemsAlongWithListOptions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify count of added items along with list options", new string[] {
                        "Todo_Count_Listoptions"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
testRunner.Given("I am on the TODO MVC page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Todo Item"});
            table3.AddRow(new string[] {
                        "TODO1"});
#line 35
testRunner.When("I add an item to the list", ((string)(null)), table3, "When ");
#line 38
testRunner.Then("I see Items Count Left is incremented", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Filters"});
            table4.AddRow(new string[] {
                        "All"});
            table4.AddRow(new string[] {
                        "Active"});
            table4.AddRow(new string[] {
                        "Completed"});
#line 39
testRunner.And("I see filter options as", ((string)(null)), table4, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify Item Selection", new string[] {
                "Todo_ItemSelection"}, SourceLine=46)]
        public virtual void VerifyItemSelection()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Item Selection", new string[] {
                        "Todo_ItemSelection"});
#line 47
this.ScenarioSetup(scenarioInfo);
#line 48
testRunner.Given("I am on the TODO MVC page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
testRunner.And("I added Todo Items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Todo Item"});
            table5.AddRow(new string[] {
                        "TODO1"});
#line 50
testRunner.When("I select any of the Todo Items", ((string)(null)), table5, "When ");
#line 53
testRunner.Then("I see the selected item is striked off and disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 54
testRunner.And("I see a filter option \"Clear completed\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify Completed List Option", new string[] {
                "Todo_Completed"}, SourceLine=58)]
        public virtual void VerifyCompletedListOption()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Completed List Option", new string[] {
                        "Todo_Completed"});
#line 59
this.ScenarioSetup(scenarioInfo);
#line 60
testRunner.Given("I am on the TODO MVC page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 61
testRunner.And("I add a Todo itema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Todo Item"});
            table6.AddRow(new string[] {
                        "TODO1"});
#line 62
testRunner.And("I Completed the task by selecting the Todo Item", ((string)(null)), table6, "And ");
#line 65
testRunner.When("I click on \"Completed\" filter option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
testRunner.Then("I see the \"Completed\" Todo item", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify All List Option", new string[] {
                "Todo_All"}, SourceLine=69)]
        [TechTalk.SpecRun.IgnoreAttribute()]
        public virtual void VerifyAllListOption()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify All List Option", new string[] {
                        "Todo_All",
                        "ignore"});
#line 70
this.ScenarioSetup(scenarioInfo);
#line 71
testRunner.Given("I am on the TODO MVC page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Todo Item"});
            table7.AddRow(new string[] {
                        "TODO1"});
            table7.AddRow(new string[] {
                        "TODO2"});
            table7.AddRow(new string[] {
                        "TODO3"});
            table7.AddRow(new string[] {
                        "TODO4"});
#line 72
testRunner.When("I add following items", ((string)(null)), table7, "When ");
#line 78
testRunner.When("I click on \"All\" filter option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
testRunner.Then("I see all added items", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify Active List Option", new string[] {
                "Todo_Active"}, SourceLine=81)]
        public virtual void VerifyActiveListOption()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Active List Option", new string[] {
                        "Todo_Active"});
#line 82
this.ScenarioSetup(scenarioInfo);
#line 83
testRunner.Given("I am on the TODO MVC page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Todo Item"});
            table8.AddRow(new string[] {
                        "TODO1"});
            table8.AddRow(new string[] {
                        "TODO2"});
            table8.AddRow(new string[] {
                        "TODO3"});
            table8.AddRow(new string[] {
                        "TODO4"});
#line 84
testRunner.When("I add following items", ((string)(null)), table8, "When ");
#line 90
testRunner.And("I marked one todo item as completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
testRunner.When("I click on \"Active\" filter option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Todo Item"});
            table9.AddRow(new string[] {
                        "TODO2"});
            table9.AddRow(new string[] {
                        "TODO3"});
            table9.AddRow(new string[] {
                        "TODO4"});
#line 93
testRunner.Then("I see following items", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Verify Clear Completed List Option", new string[] {
                "Todo_Clear",
                "Completed"}, SourceLine=100)]
        public virtual void VerifyClearCompletedListOption()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verify Clear Completed List Option", new string[] {
                        "Todo_Clear",
                        "Completed"});
#line 101
this.ScenarioSetup(scenarioInfo);
#line 102
testRunner.Given("I am on the TODO MVC page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Todo Item"});
            table10.AddRow(new string[] {
                        "TODO1"});
            table10.AddRow(new string[] {
                        "TODO2"});
            table10.AddRow(new string[] {
                        "TODO3"});
            table10.AddRow(new string[] {
                        "TODO4"});
#line 103
testRunner.When("I add following items", ((string)(null)), table10, "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Todo Item"});
            table11.AddRow(new string[] {
                        "TODO1"});
#line 109
testRunner.And("I Completed the task by selecting the Todo Item", ((string)(null)), table11, "And ");
#line 112
testRunner.And("I click on Clear Completed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
testRunner.Then("I see selected item is disappeared from Completed filter option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 114
testRunner.And("I see Clear Completed filter Option is also disappeared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
